class Score {
    field int xL, xR, y;
    field int leftNum;
    field int rightNum;
    field boolean isEnd;

    constructor Score new(int _XL, int _XR, int _Y){
        let xL = _XL;
        let xR = _XR;
        let y = _Y;
        do restart();
        let isEnd = false;
        do draw();
        return this;
    }

    method boolean getExit(){
        return isEnd;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method void erase(){
        do Screen.setColor(false);
        do Screen.drawRectangle(xL, y, xR + 32, y + 32);
        return;
    }


    method void draw(){
        var int locationL;
        var int locationR;

        let locationL = (y * 32) + (xL / 16);
        let locationR = (y * 32) + (xR / 16);

        do erase();

        if (leftNum = 0) { do NumbersDrawing.drawZero(locationL); }
        if (leftNum = 1) { do NumbersDrawing.drawOne(locationL); }
        if (leftNum = 2) { do NumbersDrawing.drawTwo(locationL); }
        if (leftNum = 3) { do NumbersDrawing.drawThree(locationL); }
        if (leftNum = 4) { do NumbersDrawing.drawFour(locationL); }
        if (leftNum = 5) { do NumbersDrawing.drawFive(locationL); }
        if (leftNum = 6) { do NumbersDrawing.drawSix(locationL); }
        if (leftNum = 7) { do NumbersDrawing.drawSeven(locationL); }
        if (leftNum = 8) { do NumbersDrawing.drawEight(locationL); }
        if (leftNum = 9) { do NumbersDrawing.drawNine(locationL); }

        if (rightNum = 0) { do NumbersDrawing.drawZero(locationR); }
        if (rightNum = 1) { do NumbersDrawing.drawOne(locationR); }
        if (rightNum = 2) { do NumbersDrawing.drawTwo(locationR); }
        if (rightNum = 3) { do NumbersDrawing.drawThree(locationR); }
        if (rightNum = 4) { do NumbersDrawing.drawFour(locationR); }
        if (rightNum = 5) { do NumbersDrawing.drawFive(locationR); }
        if (rightNum = 6) { do NumbersDrawing.drawSix(locationR); }
        if (rightNum = 7) { do NumbersDrawing.drawSeven(locationR); }
        if (rightNum = 8) { do NumbersDrawing.drawEight(locationR); }
        if (rightNum = 9) { do NumbersDrawing.drawNine(locationR); }

        // рисуем разделительную полосу
        do Screen.setColor(true);
        do Screen.drawRectangle(xL + 24, y + 8, xL + 26, y + 10);
        do Screen.drawRectangle(xL + 24, y + 22, xL + 26, y + 24);
        return;
    }

    // инкрементит очки стороны, которую передали в аргументы
    // проверяет условие окончания игры, ставит значение поля isEnd в true, если игру нужно закончить, рисуя при этом победителя
    method void rescore(int isRightWin){
        var int location;
        let location = (y * 32) + (xL / 16);

        // если isRightWin = 0, значит добавляем очко левому игроку, иначе правому
        if (isRightWin = 0){
            let leftNum = leftNum + 1;
            if (leftNum < 10){
                do draw();
            }
        }
        else {
            let rightNum = rightNum + 1;
            if (rightNum < 10){
                do draw();
            }
        }

        // если забили 10 очко, то определяем победителя и рисуем заставочку
        if ((leftNum > 9) | (rightNum > 9)){
            let isEnd = true;
            if (leftNum > 9){
                do WinnerDrawing.drawLeft(location);
            }
            else{
                do WinnerDrawing.drawRight(location);
            }
            do erase();
        }
        return;
    }

    method void restart() {
        let leftNum  = 0;
        let rightNum = 0;   
        return;
    }
}